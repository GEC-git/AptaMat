%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.7.0
%%CreationDate: Tue Jan 14 10:07:52 2025
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 -140 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: -d2 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

/ConsLegend { % xloc yloc tics range ConsLegend -> []
  /STR 8 string def
  /colshift 0.16 def
  /sep 0.1 def
  /range exch def
  % precompute number of tics but leave one tics for range numbers
  dup /tics exch dup 1 le { pop 42 } if def
  /lasttick exch dup 1 eq { pop 1.0 } { dup 1 gt { cvi } if  } ifelse def
  
  gsave
    /Helvetica findfont 10 scalefont setfont
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    % legend lines
    gsave 
    0.5 setgray
    0.05 setlinewidth
    newpath
    -1.5 2.5 moveto 10.1 2.5 lineto
    stroke
    newpath
    -1.5 1.1 moveto 10.1 1.1 lineto
    stroke
    newpath
    -1.5 2.5 moveto -1.5 -5 -6 sep mul add lineto
    stroke
    newpath
    10.1 1.1 moveto 10.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 1.1 moveto -0.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 -5 -6 sep mul add moveto 10.1 -5 -6 sep mul add lineto
    stroke
    grestore
    % color gradients
      6 -1 1
      {
        % get current number of different base pairs
        dup 1 sub 6 exch sub /curnum exch STR cvs def
        % compute y-position
        dup 6 sub dup sep mul add /ypos exch def
        % draw number of different base pairs
        -1 ypos moveto gsave 0.1 dup scale curnum show grestore
        % compute current color
        6 exch sub colshift mul
        /curcol exch def
        % draw gradient for counter examples
        gsave
        10 tics 1 add div 1 scale
        0 1 tics
        {
            dup ypos moveto
            tics div range mul 1 exch sub
            curcol exch hsb
            1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
        } for
        grestore
      } for
    0 setgray
    % legend labels
    0.1 1.2 sep add moveto (0) gsave 0.1 dup scale show grestore
    9.4 1.2 sep add moveto lasttick STR cvs gsave 0.1 dup scale show grestore
    1 3 moveto (counter examples) gsave 0.1 dup scale show grestore
    -2 -4.5 moveto 90 rotate (base pairs)  gsave 0.1 dup scale show grestore
%    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def

%%EndProlog

% data start here
/sequence { (\
auccYUNNBBNVNBRNNNNWDNNRSWDVVHDHDDRNHBUHDKMHVHNNNNDBNHYNBNBYNNHNNBNRNDDNNDDMNNNNNNNNVNNHYMcc-ymyukAUKRCcYuWauuuuuuguumcmauas-cau-cawuwukGGYWuSYHDVDmaWWUUyKgmm-cggg-ugccc-gg-auugcacu-gccgc--------c-gguuy-argscwmcmc-a--DDYHRARNRNBNDragBKgwcCVHWHYUKKGRRVDYMB\
BDNRWBRYHagrR-a-rrgy--------cg-ggg-uucgaaucc--cc-gcccca---------------------------------------------------------------------------------------------------------\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50143433 92.27290344]
[62.50802231 91.81875610]
[47.52320480 91.13767242]
[32.55041504 90.22980499]
[17.59308815 89.09535217]
[2.65465093 87.73458099]
[-12.26147366 86.14780426]
[-27.15186501 84.33538818]
[-42.01311111 82.29774475]
[-56.84180450 80.03533936]
[-71.63454437 77.54869080]
[-86.38794708 74.83837128]
[-101.09861755 71.90499878]
[-115.76319885 68.74925232]
[-130.37832642 65.37184906]
[-144.94062805 61.77357101]
[-159.44680786 57.95523071]
[-173.89349365 53.91771317]
[-188.27742004 49.66194153]
[-202.59524536 45.18888855]
[-216.84371948 40.49958038]
[-231.01957703 35.59509659]
[-245.11953735 30.47655487]
[-259.14041138 25.14513397]
[-273.07894897 19.60205078]
[-286.93197632 13.84858036]
[-300.69628906 7.88603926]
[-314.36877441 1.71579504]
[-327.94625854 -4.66073847]
[-341.42565918 -11.24209976]
[-354.80389404 -18.02677917]
[-368.07785034 -25.01322174]
[-381.24453735 -32.19982910]
[-394.30090332 -39.58494949]
[-407.24395752 -47.16689301]
[-420.07073975 -54.94391632]
[-432.77832031 -62.91424561]
[-445.36376953 -71.07604980]
[-457.82421875 -79.42745209]
[-470.15679932 -87.96655273]
[-482.35867310 -96.69137573]
[-494.42706299 -105.59993744]
[-506.35922241 -114.69018555]
[-518.15234375 -123.96004486]
[-529.80383301 -133.40737915]
[-541.31091309 -143.03002930]
[-552.67102051 -152.82579041]
[-563.88146973 -162.79241943]
[-574.93975830 -172.92762756]
[-585.84338379 -183.22909546]
[-596.58978271 -193.69445801]
[-607.17651367 -204.32131958]
[-617.60107422 -215.10723877]
[-627.86120605 -226.04974365]
[-637.95452881 -237.14633179]
[-647.87860107 -248.39445496]
[-657.63134766 -259.79153442]
[-667.21038818 -271.33496094]
[-676.61352539 -283.02209473]
[-685.83868408 -294.85025024]
[-694.88372803 -306.81671143]
[-703.74652100 -318.91873169]
[-712.42510986 -331.15356445]
[-720.91748047 -343.51837158]
[-729.22167969 -356.01031494]
[-737.33575439 -368.62658691]
[-745.25793457 -381.36422729]
[-752.98638916 -394.22036743]
[-760.51928711 -407.19201660]
[-767.85491943 -420.27624512]
[-774.99163818 -433.47003174]
[-781.92779541 -446.77035522]
[-788.66180420 -460.17413330]
[-795.19207764 -473.67834473]
[-801.51721191 -487.27990723]
[-807.63562012 -500.97561646]
[-813.54602051 -514.76245117]
[-819.24700928 -528.63714600]
[-824.73730469 -542.59655762]
[-830.01562500 -556.63745117]
[-835.08074951 -570.75671387]
[-839.93157959 -584.95104980]
[-844.56689453 -599.21716309]
[-848.98577881 -613.55181885]
[-853.18707275 -627.95172119]
[-857.16986084 -642.41363525]
[-860.93328857 -656.93414307]
[-864.47644043 -671.50994873]
[-867.79846191 -686.13775635]
[-870.89868164 -700.81414795]
[-873.77636719 -715.53582764]
[-876.43084717 -730.29937744]
[-878.86145020 -745.10144043]
[-881.06774902 -759.93859863]
[-883.04913330 -774.80743408]
[-884.80517578 -789.70458984]
[-886.33544922 -804.62658691]
[-887.63970947 -819.57006836]
[-888.71752930 -834.53161621]
[-889.56872559 -849.50769043]
[-890.19311523 -864.49499512]
[-890.59045410 -879.49005127]
[-890.76080322 -894.48937988]
[-890.70404053 -909.48950195]
[-890.42016602 -924.48712158]
[-889.90930176 -939.47869873]
[-889.17144775 -954.46087646]
[-888.20690918 -969.43011475]
[-887.01586914 -984.38299561]
[-885.59857178 -999.31622314]
[-883.95532227 -1014.22619629]
[-882.08660889 -1029.10961914]
[-879.99267578 -1043.96301270]
[-877.67419434 -1058.78308105]
[-875.13159180 -1073.56628418]
[-872.36541748 -1088.30932617]
[-869.37640381 -1103.00878906]
[-866.16516113 -1117.66137695]
[-862.73248291 -1132.26354980]
[-859.07910156 -1146.81213379]
[-855.20587158 -1161.30371094]
[-851.11370850 -1175.73510742]
[-846.80352783 -1190.10278320]
[-842.27630615 -1204.40356445]
[-837.53308105 -1218.63415527]
[-832.57495117 -1232.79138184]
[-827.40307617 -1246.87182617]
[-822.01867676 -1260.87243652]
[-816.42285156 -1274.78991699]
[-810.61700439 -1288.62109375]
[-804.60241699 -1302.36267090]
[-798.38043213 -1316.01171875]
[-791.95257568 -1329.56506348]
[-785.32019043 -1343.01940918]
[-778.48492432 -1356.37182617]
[-771.44830322 -1369.61926270]
[-764.21191406 -1382.75866699]
[-756.77746582 -1395.78698730]
[-749.14654541 -1408.70129395]
[-741.32104492 -1421.49853516]
[-733.30267334 -1434.17578125]
[-725.09326172 -1446.73034668]
[-716.69476318 -1459.15905762]
[-708.10906982 -1471.45922852]
[-699.33813477 -1483.62792969]
[-690.38391113 -1495.66259766]
[-681.24859619 -1507.56018066]
[-671.93414307 -1519.31823730]
[-662.44281006 -1530.93383789]
[-652.77661133 -1542.40441895]
[-642.93792725 -1553.72729492]
[-632.92895508 -1564.90002441]
[-622.75195312 -1575.91992188]
[-612.40930176 -1586.78442383]
[-601.90332031 -1597.49108887]
[-591.23651123 -1608.03747559]
[-580.41119385 -1618.42126465]
[-569.42993164 -1628.63989258]
[-558.29522705 -1638.69104004]
[-547.00958252 -1648.57250977]
[-535.57568359 -1658.28198242]
[-523.99609375 -1667.81726074]
[-512.27343750 -1677.17614746]
[-500.41046143 -1686.35644531]
[-488.40985107 -1695.35607910]
[-476.27435303 -1704.17309570]
[-464.00677490 -1712.80529785]
[-451.60992432 -1721.25073242]
[-439.08660889 -1729.50769043]
[-426.43972778 -1737.57397461]
[-413.67218018 -1745.44787598]
[-400.78689575 -1753.12756348]
[-387.78680420 -1760.61132812]
[-374.67492676 -1767.89733887]
[-361.45422363 -1774.98413086]
[-348.12774658 -1781.86987305]
[-334.69854736 -1788.55310059]
[-321.16970825 -1795.03222656]
[-307.54434204 -1801.30578613]
[-293.82553101 -1807.37231445]
[-280.01647949 -1813.23046875]
[-266.12030029 -1818.87890625]
[-252.14019775 -1824.31640625]
[-238.07937622 -1829.54150391]
[-223.94107056 -1834.55322266]
[-209.72850037 -1839.35021973]
[-195.44493103 -1843.93151855]
[-181.09364319 -1848.29602051]
[-166.67793274 -1852.44287109]
[-152.20108032 -1856.37084961]
[-137.66642761 -1860.07922363]
[-123.07729340 -1863.56726074]
[-108.43701935 -1866.83386230]
[-93.74897003 -1869.87854004]
[-79.01651764 -1872.70043945]
[-64.24301910 -1875.29907227]
[-49.43188095 -1877.67358398]
[-34.58648682 -1879.82373047]
[-19.71024132 -1881.74877930]
[-4.80655718 -1883.44848633]
[10.12115192 -1884.92224121]
[25.06946182 -1886.16992188]
[40.03495026 -1887.19116211]
[55.01417923 -1887.98559570]
[70.00372314 -1888.55322266]
[85.00014496 -1888.89392090]
[100.00000000 -1889.00744629]
[114.99985504 -1888.89392090]
[129.99627686 -1888.55322266]
[144.98582458 -1887.98559570]
[159.96505737 -1887.19116211]
[174.93054199 -1886.16992188]
[189.87884521 -1884.92224121]
[204.80656433 -1883.44848633]
[219.71023560 -1881.74877930]
[234.58648682 -1879.82373047]
[249.43188477 -1877.67358398]
[264.24301147 -1875.29907227]
[279.01651001 -1872.70043945]
[293.74896240 -1869.87854004]
[308.43701172 -1866.83386230]
[323.07730103 -1863.56726074]
[337.66641235 -1860.07922363]
[352.20108032 -1856.37084961]
[366.67791748 -1852.44287109]
[381.09365845 -1848.29602051]
[395.44494629 -1843.93151855]
[409.72848511 -1839.35021973]
[423.94107056 -1834.55322266]
[438.07937622 -1829.54150391]
[452.14019775 -1824.31640625]
[466.12030029 -1818.87890625]
[480.01647949 -1813.23046875]
[493.82553101 -1807.37231445]
[507.54434204 -1801.30578613]
[521.16973877 -1795.03222656]
[534.69854736 -1788.55310059]
[548.12774658 -1781.86987305]
[561.45422363 -1774.98413086]
[574.67492676 -1767.89733887]
[587.78680420 -1760.61132812]
[600.78692627 -1753.12756348]
[613.67218018 -1745.44787598]
[626.43975830 -1737.57397461]
[639.08660889 -1729.50769043]
[651.60992432 -1721.25073242]
[664.00677490 -1712.80529785]
[676.27435303 -1704.17309570]
[688.40985107 -1695.35607910]
[700.41046143 -1686.35644531]
[712.27343750 -1677.17614746]
[723.99609375 -1667.81726074]
[735.57568359 -1658.28198242]
[747.00958252 -1648.57250977]
[758.29522705 -1638.69104004]
[769.42993164 -1628.63989258]
[780.41119385 -1618.42126465]
[791.23651123 -1608.03747559]
[801.90332031 -1597.49108887]
[812.40930176 -1586.78442383]
[822.75195312 -1575.91992188]
[832.92895508 -1564.90002441]
[842.93792725 -1553.72729492]
[852.77661133 -1542.40441895]
[862.44281006 -1530.93383789]
[871.93414307 -1519.31823730]
[881.24859619 -1507.56018066]
[890.38391113 -1495.66259766]
[899.33813477 -1483.62792969]
[908.10906982 -1471.45922852]
[916.69476318 -1459.15905762]
[925.09326172 -1446.73034668]
[933.30267334 -1434.17578125]
[941.32104492 -1421.49853516]
[949.14654541 -1408.70129395]
[956.77746582 -1395.78698730]
[964.21191406 -1382.75866699]
[971.44830322 -1369.61926270]
[978.48492432 -1356.37182617]
[985.32019043 -1343.01940918]
[991.95257568 -1329.56506348]
[998.38043213 -1316.01171875]
[1004.60241699 -1302.36267090]
[1010.61700439 -1288.62109375]
[1016.42285156 -1274.78991699]
[1022.01867676 -1260.87243652]
[1027.40307617 -1246.87182617]
[1032.57495117 -1232.79138184]
[1037.53308105 -1218.63415527]
[1042.27624512 -1204.40356445]
[1046.80346680 -1190.10278320]
[1051.11364746 -1175.73510742]
[1055.20581055 -1161.30371094]
[1059.07910156 -1146.81213379]
[1062.73242188 -1132.26354980]
[1066.16516113 -1117.66137695]
[1069.37634277 -1103.00878906]
[1072.36547852 -1088.30932617]
[1075.13159180 -1073.56628418]
[1077.67419434 -1058.78308105]
[1079.99267578 -1043.96301270]
[1082.08654785 -1029.10961914]
[1083.95532227 -1014.22619629]
[1085.59863281 -999.31622314]
[1087.01586914 -984.38299561]
[1088.20690918 -969.43011475]
[1089.17150879 -954.46087646]
[1089.90930176 -939.47869873]
[1090.42016602 -924.48712158]
[1090.70397949 -909.48950195]
[1090.76086426 -894.48937988]
[1090.59045410 -879.49005127]
[1090.19311523 -864.49499512]
[1089.56872559 -849.50769043]
[1088.71752930 -834.53161621]
[1087.63964844 -819.57006836]
[1086.33544922 -804.62658691]
[1084.80517578 -789.70458984]
[1083.04907227 -774.80743408]
[1081.06774902 -759.93859863]
[1078.86145020 -745.10144043]
[1076.43078613 -730.29937744]
[1073.77636719 -715.53582764]
[1070.89868164 -700.81414795]
[1067.79846191 -686.13775635]
[1064.47644043 -671.50994873]
[1060.93322754 -656.93414307]
[1057.16992188 -642.41363525]
[1053.18701172 -627.95172119]
[1048.98571777 -613.55181885]
[1044.56689453 -599.21716309]
[1039.93151855 -584.95104980]
[1035.08081055 -570.75671387]
[1030.01562500 -556.63745117]
[1024.73730469 -542.59655762]
[1019.24700928 -528.63714600]
[1013.54602051 -514.76245117]
[1007.63562012 -500.97561646]
[1001.51721191 -487.27990723]
[995.19207764 -473.67834473]
[988.66180420 -460.17413330]
[981.92779541 -446.77035522]
[974.99163818 -433.47003174]
[967.85491943 -420.27624512]
[960.51928711 -407.19201660]
[952.98638916 -394.22036743]
[945.25793457 -381.36422729]
[937.33575439 -368.62658691]
[929.22167969 -356.01031494]
[920.91748047 -343.51837158]
[912.42510986 -331.15356445]
[903.74652100 -318.91873169]
[894.88372803 -306.81671143]
[885.83868408 -294.85025024]
[876.61352539 -283.02209473]
[867.21038818 -271.33496094]
[857.63134766 -259.79153442]
[847.87860107 -248.39445496]
[837.95452881 -237.14633179]
[827.86120605 -226.04974365]
[817.60107422 -215.10723877]
[807.17651367 -204.32131958]
[796.58978271 -193.69445801]
[785.84338379 -183.22909546]
[774.93975830 -172.92762756]
[763.88146973 -162.79241943]
[752.67102051 -152.82579041]
[741.31091309 -143.03002930]
[729.80383301 -133.40737915]
[718.15234375 -123.96004486]
[706.35919189 -114.69018555]
[694.42706299 -105.59993744]
[682.35864258 -96.69137573]
[670.15679932 -87.96655273]
[657.82421875 -79.42745209]
[645.36376953 -71.07604980]
[632.77832031 -62.91424561]
[620.07073975 -54.94391632]
[607.24395752 -47.16689301]
[594.30090332 -39.58494949]
[581.24450684 -32.19982910]
[568.07788086 -25.01322174]
[554.80389404 -18.02677917]
[541.42565918 -11.24209976]
[527.94628906 -4.66073847]
[514.36877441 1.71579504]
[500.69628906 7.88603926]
[486.93197632 13.84858036]
[473.07894897 19.60205078]
[459.14041138 25.14513397]
[445.11953735 30.47655487]
[431.01956177 35.59509659]
[416.84371948 40.49958038]
[402.59524536 45.18888855]
[388.27740479 49.66194153]
[373.89349365 53.91771317]
[359.44680786 57.95523071]
[344.94064331 61.77357101]
[330.37832642 65.37184906]
[315.76318359 68.74925232]
[301.09863281 71.90499878]
[286.38793945 74.83837128]
[271.63455200 77.54869080]
[256.84179688 80.03533936]
[242.01310730 82.29774475]
[227.15187073 84.33538818]
[212.26147461 86.14780426]
[197.34535217 87.73458099]
[182.40690613 89.09535217]
[167.44958496 90.22980499]
[152.47679138 91.13767242]
[137.49197388 91.81875610]
[122.49856567 92.27290344]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations
0.8 -0.1 2.000000 0.800000 ConsLegend

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
